### Valid queries

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet;"
  ]
}

### Valid query for inserting several rows

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('omena', 5);",
    "SELECT * FROM Tuotteet;"
  ]
}

### Valid queries demonstrating keyword case-insensitivity

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CReAtE TAbLE Tuotteet (id INTEgER PRImARY KeY, nimi TExT, hinta INTeGER);",
    "INSeRT InTO Tuotteet (nimi, hinta) VALuES ('retiisi', 7);",
    "SELeCT * FrOm Tuotteet;"
  ]
}

### Unrecognisable first query

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet;"
  ]
}

### Invalid CREATE TABLE -query

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TX, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet;"
  ]
}

### Invalid CREATE TABLE -query (duplicate columns)

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, nimi INTEGER, id TEXT);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet;"
  ]
}

### Invalid CREATE TABLE -query (wrong data type for column)

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES (123, 'string');",
    "SELECT * FROM Tuotteet;"
  ]
}

### Invalid SELECT * -query

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet"
  ]
}

### Invalid INSERT INTO -query

POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet;"
  ]
}

### For testing SELECT * ... WHERE ..
POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": ["CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, nimi TEXT, hinta INTEGER);",
  "INSERT INTO Tuotteet (nimi, hinta) VALUES ('retiisi', 7);",
    "SELECT * FROM Tuotteet WHERE hinta=7;",
    "SELECT * FROM Tuotteet WHERE nimi='retiisi';"
  ]
}

### SUMMARY QUERY
POST https://hy-sql.herokuapp.com/api/query
Content-Type: application/json

{
  "commandArray": [
    "CREATE TABLE Tuotteet (id INTEGER PRIMARY KEY, tuote_id INTEGER, nimi TEXT, hinta INTEGER);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (1, 'porkkana', 7);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (1, 'banaani', 7);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (2, 'banaani', 4);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (2, 'retiisi', 7);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (5, 'ol', 2);",
    "INSERT INTO Tuotteet (tuote_id, nimi, hinta) VALUES (6, 'bucket', 0);",
    "SELECT nimi, hinta, 5*hinta+3, LENGTH(nimi) FROM Tuotteet WHERE hinta=LENGTH(nimi) OR (hinta+1=5 AND nimi<>'banaani') OR (hinta=2*hinta) ORDER BY LENGTH(nimi), hinta;"
  ]
}
